!
    function(J, z) {
        "function" == typeof define && define.amd ? define(["exports"], z) : z("object" == typeof exports && "string" != typeof exports.nodeName ? exports : J.commonJsStrict = {})
    }(this, function(J) {
        function z(a) {
            if (a in P) return a;
            for (var b = a[0].toUpperCase() + a.slice(1), c = Q.length; c--;) if (a = Q[c] + b, a in P) return a
        }
        function A(a, b) {
            a = a || {};
            for (var c in b) b[c] && b[c].constructor && b[c].constructor === Object ? (a[c] = a[c] || {}, A(a[c], b[c])) : a[c] = b[c];
            return a
        }
        function K(a) {
            if ("createEvent" in document) {
                var b = document.createEvent("HTMLEvents");
                b.initEvent("change", !1, !0);
                a.dispatchEvent(b)
            } else a.fireEvent("onchange")
        }
        function m(a, b, c) {
            if ("string" == typeof b) {
                var d = b;
                b = {};
                b[d] = c
            }
            for (var e in b) a.style[e] = b[e]
        }
        function t(a, b) {
            a.classList ? a.classList.add(b) : a.className += " " + b
        }
        function W(a, b, c) {
            var d = b || new Image;
            return d.style.opacity = 0, new Promise(function(b) {
                function e() {
                    setTimeout(function() {
                        b(d)
                    }, 1)
                }
                return d.src === a ? void e() : (d.exifdata = null, d.removeAttribute("crossOrigin"), a.match(/^https?:\/\/|^\/\//) && d.setAttribute("crossOrigin", "anonymous"), d.onload = function() {
                    c ? EXIF.getData(d, function() {
                        e()
                    }) : e()
                }, void(d.src = a))
            })
        }
        function X(a) {
            var b = a.naturalWidth,
                c = a.naturalHeight;
            a.exifdata && 5 <= a.exifdata.Orientation && (a = b, b = c, c = a);
            return {
                width: b,
                height: c
            }
        }
        function L(a, b, c) {
            var d = b.width,
                e = b.height,
                f = a.getContext("2d");
            switch (a.width = b.width, a.height = b.height, f.save(), c) {
                case 2:
                    f.translate(d, 0);
                    f.scale(-1, 1);
                    break;
                case 3:
                    f.translate(d, e);
                    f.rotate(180 * Math.PI / 180);
                    break;
                case 4:
                    f.translate(0, e);
                    f.scale(1, -1);
                    break;
                case 5:
                    a.width = e;
                    a.height = d;
                    f.rotate(90 * Math.PI / 180);
                    f.scale(1, -1);
                    break;
                case 6:
                    a.width = e;
                    a.height = d;
                    f.rotate(90 * Math.PI / 180);
                    f.translate(0, -e);
                    break;
                case 7:
                    a.width = e;
                    a.height = d;
                    f.rotate(-90 * Math.PI / 180);
                    f.translate(-d, e);
                    f.scale(1, -1);
                    break;
                case 8:
                    a.width = e, a.height = d, f.translate(0, d), f.rotate(-90 * Math.PI / 180)
            }
            f.drawImage(b, 0, 0, d, e);
            f.restore()
        }
        function Y() {
            function a(a) {
                if ((void 0 === a.button || 0 === a.button) && (a.preventDefault(), !q)) {
                    var w = g.elements.overlay.getBoundingClientRect();
                    if (q = !0, e = a.pageX, f = a.pageY, d = -1 !== a.currentTarget.className.indexOf("vertical") ? "v" : "h", l = w.width, n = w.height, a.touches) a = a.touches[0], e = a.pageX, f = a.pageY;
                    window.addEventListener("mousemove", b);
                    window.addEventListener("touchmove", b);
                    window.addEventListener("mouseup", c);
                    window.addEventListener("touchend", c);
                    document.body.style[B] = "none"
                }
            }
            function b(a) {
                var b = a.pageX,
                    c = a.pageY;
                if (a.preventDefault(), a.touches) c = a.touches[0], b = c.pageX, c = c.pageY;
                a = b - e;
                var q = c - f,
                    k = g.options.viewport.height + q,
                    h = g.options.viewport.width + a;
                "v" === d && k >= w && n >= k ? (m(p, {
                    height: k + "px"
                }), g.options.boundary.height += q, m(g.elements.boundary, {
                    height: g.options.boundary.height + "px"
                }), g.options.viewport.height += q, m(g.elements.viewport, {
                    height: g.options.viewport.height + "px"
                })) : "h" === d && h >= w && l >= h && (m(p, {
                    width: h + "px"
                }), g.options.boundary.width += a, m(g.elements.boundary, {
                    width: g.options.boundary.width + "px"
                }), g.options.viewport.width += a, m(g.elements.viewport, {
                    width: g.options.viewport.width + "px"
                }));
                F.call(g);
                S.call(g);
                I.call(g);
                C.call(g);
                f = c;
                e = b
            }
            function c() {
                q = !1;
                window.removeEventListener("mousemove", b);
                window.removeEventListener("touchmove", b);
                window.removeEventListener("mouseup", c);
                window.removeEventListener("touchend", c);
                document.body.style[B] = ""
            }
            var d, e, f, l, n, k, h, g = this,
                p = document.createElement("div"),
                q = !1,
                w = 50;
            t(p, "cr-resizer");
            m(p, {
                width: this.options.viewport.width + "px",
                height: this.options.viewport.height + "px"
            });
            this.options.resizeControls.height && (k = document.createElement("div"), t(k, "cr-resizer-vertical"), p.appendChild(k));
            this.options.resizeControls.width && (h = document.createElement("div"), t(h, "cr-resizer-horisontal"), p.appendChild(h));
            k && k.addEventListener("mousedown", a);
            h && h.addEventListener("mousedown", a);
            this.elements.boundary.appendChild(p)
        }
        function G(a) {
            if (this.options.enableZoom) {
                var b = this.elements.zoomer;
                a = x(a, 4);
                b.value = Math.max(b.min, Math.min(b.max, a))
            }
        }
        function Z() {
            function a() {
                T.call(c, {
                    value: parseFloat(e.value),
                    origin: new H(c.elements.preview),
                    viewportRect: c.elements.viewport.getBoundingClientRect(),
                    transform: r.parse(c.elements.preview)
                })
            }
            function b(b) {
                var d = c._currentZoom + (b.wheelDelta ? b.wheelDelta / 1200 : b.deltaY ? b.deltaY / 1060 : b.detail ? b.detail / -60 : 0) * c._currentZoom;
                b.preventDefault();
                G.call(c, d);
                a.call(c)
            }
            var c = this,
                d = c.elements.zoomerWrap = document.createElement("div"),
                e = c.elements.zoomer = document.createElement("input");
            t(d, "cr-slider-wrap");
            t(e, "cr-slider");
            e.type = "range";
            e.step = "0.0001";
            e.value = 1;
            e.style.display = c.options.showZoomer ? "" : "none";
            c.element.appendChild(d);
            d.appendChild(e);
            c._currentZoom = 1;
            c.elements.zoomer.addEventListener("input", a);
            c.elements.zoomer.addEventListener("change", a);
            c.options.mouseWheelZoom && (c.elements.boundary.addEventListener("mousewheel", b), c.elements.boundary.addEventListener("DOMMouseScroll", b))
        }
        function T(a) {
            function b() {
                var a = {};
                a[u] = d.toString();
                a[D] = f.toString();
                m(c.elements.preview, a)
            }
            var c = this,
                d = a ? a.transform : r.parse(c.elements.preview),
                e = a ? a.viewportRect : c.elements.viewport.getBoundingClientRect(),
                f = a ? a.origin : new H(c.elements.preview);
            if (c._currentZoom = a ? a.value : c._currentZoom, d.scale = c._currentZoom, b(), c.options.enforceBoundary) e = aa.call(c, e), a = e.translate, e = e.origin, d.x >= a.maxX && (f.x = e.minX, d.x = a.maxX), d.x <= a.minX && (f.x = e.maxX, d.x = a.minX), d.y >= a.maxY && (f.y = e.minY, d.y = a.maxY), d.y <= a.minY && (f.y = e.maxY, d.y = a.minY);
            b();
            ba.call(c);
            C.call(c)
        }
        function aa(a) {
            var b = this._currentZoom,
                c = a.width;
            a = a.height;
            var d = this.elements.boundary.clientWidth / 2,
                e = this.elements.boundary.clientHeight / 2,
                f = this.elements.preview.getBoundingClientRect(),
                l = f.width;
            f = f.height;
            var n = c / 2,
                k = a / 2;
            d = -1 * (n / b - d);
            e = -1 * (k / b - e);
            n *= 1 / b;
            k *= 1 / b;
            return {
                translate: {
                    maxX: d,
                    minX: d - (1 / b * l - 1 / b * c),
                    maxY: e,
                    minY: e - (1 / b * f - 1 / b * a)
                },
                origin: {
                    maxX: 1 / b * l - n,
                    minX: n,
                    maxY: 1 / b * f - k,
                    minY: k
                }
            }
        }
        function I() {
            var a = this._currentZoom,
                b = this.elements.preview.getBoundingClientRect(),
                c = this.elements.viewport.getBoundingClientRect(),
                d = r.parse(this.elements.preview.style[u]),
                e = new H(this.elements.preview),
                f = c.left - b.left + c.width / 2;
            b = (c.top - b.top + c.height / 2) / a;
            f /= a;
            c = (b - e.y) * (1 - a);
            d.x -= (f - e.x) * (1 - a);
            d.y -= c;
            a = {};
            a[D] = f + "px " + b + "px";
            a[u] = d.toString();
            m(this.elements.preview, a)
        }
        function ca() {
            function a(a, b) {
                var c = g.elements.preview.getBoundingClientRect(),
                    d = h.y + b,
                    q = h.x + a;
                g.options.enforceBoundary ? (k.top > c.top + b && k.bottom < c.bottom + b && (h.y = d), k.left > c.left + a && k.right < c.right + a && (h.x = q)) : (h.y = d, h.x = q)
            }
            function b(b) {
                var c = {};
                a(b[0], b[1]);
                c[u] = h.toString();
                m(g.elements.preview, c);
                F.call(g);
                document.body.style[B] = "";
                I.call(g);
                C.call(g);
                n = 0
            }
            function c(a) {
                if ((void 0 === a.button || 0 === a.button) && (a.preventDefault(), !p)) {
                    if (p = !0, f = a.pageX, l = a.pageY, a.touches) a = a.touches[0], f = a.pageX, l = a.pageY;
                    h = r.parse(g.elements.preview);
                    window.addEventListener("mousemove", d);
                    window.addEventListener("touchmove", d);
                    window.addEventListener("mouseup", e);
                    window.addEventListener("touchend", e);
                    document.body.style[B] = "none";
                    k = g.elements.viewport.getBoundingClientRect()
                }
            }
            function d(b) {
                b.preventDefault();
                var c = b.pageX,
                    d = b.pageY;
                b.touches && (d = b.touches[0], c = d.pageX, d = d.pageY);
                var e = c - f,
                    q = d - l,
                    k = {};
                if ("touchmove" == b.type && 1 < b.touches.length) return c = b.touches[0], b = b.touches[1], b = Math.sqrt((c.pageX - b.pageX) * (c.pageX - b.pageX) + (c.pageY - b.pageY) * (c.pageY - b.pageY)), n || (n = b / g._currentZoom), G.call(g, b / n), void K(g.elements.zoomer);
                a(e, q);
                k[u] = h.toString();
                m(g.elements.preview, k);
                F.call(g);
                l = d;
                f = c
            }
            function e() {
                p = !1;
                window.removeEventListener("mousemove", d);
                window.removeEventListener("touchmove", d);
                window.removeEventListener("mouseup", e);
                window.removeEventListener("touchend", e);
                document.body.style[B] = "";
                I.call(g);
                C.call(g);
                n = 0
            }
            var f, l, n, k, h, g = this,
                p = !1;
            g.elements.overlay.addEventListener("mousedown", c);
            g.elements.viewport.addEventListener("keydown", function(a) {
                function c(a) {
                    switch (a) {
                        case d:
                            return [1, 0];
                        case e:
                            return [0, 1];
                        case q:
                            return [-1, 0];
                        case f:
                            return [0, -1]
                    }
                }
                var d = 37,
                    e = 38,
                    q = 39,
                    f = 40;
                if (!a.shiftKey || a.keyCode != e && a.keyCode != f) g.options.enableKeyMovement && 37 <= a.keyCode && 40 >= a.keyCode && (a.preventDefault(), a = c(a.keyCode), h = r.parse(g.elements.preview), document.body.style[B] = "none", k = g.elements.viewport.getBoundingClientRect(), b(a));
                else {
                    var n = 0;
                    n = a.keyCode == e ? parseFloat(g.elements.zoomer.value, 10) + parseFloat(g.elements.zoomer.step, 10) : parseFloat(g.elements.zoomer.value, 10) - parseFloat(g.elements.zoomer.step, 10);
                    g.setZoom(n)
                }
            });
            g.elements.overlay.addEventListener("touchstart", c)
        }
        function F() {
            var a = this.elements.boundary.getBoundingClientRect(),
                b = this.elements.preview.getBoundingClientRect();
            m(this.elements.overlay, {
                width: b.width + "px",
                height: b.height + "px",
                top: b.top - a.top + "px",
                left: b.left - a.left + "px"
            })
        }
        function C() {
            var a, b = this.get();
            0 < this.elements.preview.offsetHeight && 0 < this.elements.preview.offsetWidth && ((this.options.update.call(this, b), this.$ && "undefined" == typeof Prototype) ? this.$(this.element).trigger("update", b) : (window.CustomEvent ? a = new CustomEvent("update", {
                detail: b
            }) : (a = document.createEvent("CustomEvent"), a.initCustomEvent("update", !0, !0, b)), this.element.dispatchEvent(a)))
        }
        function N() {
            var a = {},
                b = this.elements.preview,
                c = this.elements.preview.getBoundingClientRect(),
                d = new r(0, 0, 1),
                e = new H;
            if (0 < this.elements.preview.offsetHeight && 0 < this.elements.preview.offsetWidth && !this.data.bound) {
                this.data.bound = !0;
                a[u] = d.toString();
                a[D] = e.toString();
                a.opacity = 1;
                m(b, a);
                this._originalImageWidth = c.width;
                this._originalImageHeight = c.height;
                this.options.enableZoom ? S.call(this, !0) : this._currentZoom = 1;
                d.scale = this._currentZoom;
                a[u] = d.toString();
                m(b, a);
                if (this.data.points.length) {
                    a = this.data.points;
                    if (4 != a.length) throw "Croppie - Invalid number of points supplied: " + a;
                    b = a[2] - a[0];
                    d = this.elements.viewport.getBoundingClientRect();
                    e = this.elements.boundary.getBoundingClientRect();
                    b = d.width / b;
                    c = -1 * a[1] + (d.top - e.top);
                    d = -1 * a[0] + (d.left - e.left);
                    e = {};
                    e[D] = a[0] + "px " + a[1] + "px";
                    e[u] = (new r(d, c, b)).toString();
                    m(this.elements.preview, e);
                    G.call(this, b);
                    this._currentZoom = b
                } else a = this.elements.preview.getBoundingClientRect(), b = this.elements.viewport.getBoundingClientRect(), c = this.elements.boundary.getBoundingClientRect(), a = new r(b.left - c.left - (a.width - b.width) / 2, b.top - c.top - (a.height - b.height) / 2, this._currentZoom), m(this.elements.preview, u, a.toString());
                I.call(this);
                F.call(this)
            }
        }
        function S(a) {
            var b, c, d, e, f = 0,
                l = 1.5,
                n = this.elements.zoomer,
                k = parseFloat(n.value),
                h = this.elements.boundary.getBoundingClientRect(),
                g = this.elements.preview.getBoundingClientRect(),
                p = this.elements.viewport.getBoundingClientRect();
            this.options.enforceBoundary && (d = p.width / (a ? g.width : g.width / k), e = p.height / (a ? g.height : g.height / k), f = Math.max(d, e));
            f >= l && (l = f + 1);
            n.min = x(f, 4);
            n.max = x(l, 4);
            a && (c = Math.max(h.width / g.width, h.height / g.height), b = null !== this.data.boundZoom ? this.data.boundZoom : c, G.call(this, b));
            K(n)
        }
        function da(a) {
            var b = this.elements.canvas,
                c = this.elements.img,
                d = b.getContext("2d"),
                e = this.options.enableExif && window.EXIF;
            a = this.options.enableOrientation && a;
            (d.clearRect(0, 0, b.width, b.height), b.width = c.width, b.height = c.height, e && !a) ? L(b, c, parseInt(c.exifdata.Orientation || 0, 10)) : a && L(b, c, a)
        }
        function O(a) {
            var b = a.points,
                c = parseInt(b[0], 10),
                d = parseInt(b[1], 10),
                e = parseInt(b[2], 10);
            b = parseInt(b[3], 10);
            var f = e - c,
                l = b - d,
                n = a.circle,
                k = document.createElement("canvas"),
                h = k.getContext("2d"),
                g = f,
                p = l,
                q = 0,
                w = 0,
                E = g,
                R = p,
                m = 1;
            return a.outputWidth && a.outputHeight && (E = a.outputWidth, R = a.outputHeight, m = E / g), k.width = E, k.height = R, a.backgroundColor && (h.fillStyle = a.backgroundColor, h.fillRect(0, 0, g, p)), this.options.enforceBoundary || (0 > c && (q = Math.abs(c), c = 0), 0 > d && (w = Math.abs(d), d = 0), e > this._originalImageWidth && (f = this._originalImageWidth - c, g = f), b > this._originalImageHeight && (l = this._originalImageHeight - d, p = l)), 1 !== m && (q *= m, w *= m, g *= m, p *= m), h.drawImage(this.elements.preview, c, d, Math.min(f, this._originalImageWidth), Math.min(l, this._originalImageHeight), q, w, g, p), n && (h.fillStyle = "#fff", h.globalCompositeOperation = "destination-in", h.beginPath(), h.arc(g / 2, p / 2, g / 2, 0, 2 * Math.PI, !0), h.closePath(), h.fill()), k
        }
        function ea(a) {
            var b = this;
            return new Promise(function(c) {
                O.call(b, a).toBlob(function(a) {
                    c(a)
                }, a.format, a.quality)
            })
        }
        function U(a, b) {
            var c = this,
                d = [],
                e = null;
            var f = c.options.enableExif && window.EXIF;
            if ("string" == typeof a) {
                var l = a;
                a = {}
            } else if (Array.isArray(a)) d = a.slice();
            else {
                if ("undefined" == typeof a && c.data.url) return N.call(c), C.call(c), null;
                l = a.url;
                d = a.points || [];
                e = "undefined" == typeof a.zoom ? null : a.zoom
            }
            return c.data.bound = !1, c.data.url = l || c.data.url, c.data.boundZoom = e, W(l, c.elements.img, f).then(function(e) {
                if (d.length) c.options.relative && (d = [d[0] * e.naturalWidth / 100, d[1] * e.naturalHeight / 100, d[2] * e.naturalWidth / 100, d[3] * e.naturalHeight / 100]);
                else {
                    var f, h;
                    e = X(e);
                    var g = c.elements.viewport.getBoundingClientRect();
                    g = g.width / g.height;
                    e.width / e.height > g ? (h = e.height, f = h * g) : (f = e.width, h = f / g);
                    g = (e.width - f) / 2;
                    e = (e.height - h) / 2;
                    c.data.points = [g, e, g + f, e + h]
                }
                c.data.points = d.map(function(a) {
                    return parseFloat(a)
                });
                c.options.useCanvas && da.call(c, a.orientation || 1);
                N.call(c);
                C.call(c);
                b && b()
            })
        }
        function x(a, b) {
            return parseFloat(a).toFixed(b || 0)
        }
        function V() {
            var a = this.elements.preview.getBoundingClientRect(),
                b = this.elements.viewport.getBoundingClientRect(),
                c = b.left - a.left;
            a = b.top - a.top;
            var d = c + this.elements.viewport.offsetWidth + (b.width - this.elements.viewport.offsetWidth) / 2;
            b = a + this.elements.viewport.offsetHeight + (b.height - this.elements.viewport.offsetHeight) / 2;
            var e = this._currentZoom;
            (e === 1 / 0 || isNaN(e)) && (e = 1);
            var f = this.options.enforceBoundary ? 0 : Number.NEGATIVE_INFINITY;
            return c = Math.max(f, c / e), a = Math.max(f, a / e), d = Math.max(f, d / e), b = Math.max(f, b / e), {
                points: [x(c), x(a), x(d), x(b)],
                zoom: e
            }
        }
        function fa(a) {
            var b = this,
                c = V.call(b),
                d = A(ha, A({}, a)),
                e = "string" == typeof a ? a : d.type || "base64";
            a = d.size || "viewport";
            var f = d.format,
                l = d.quality,
                n = d.backgroundColor;
            d = "boolean" == typeof d.circle ? d.circle : "circle" === b.options.viewport.type;
            var k = b.elements.viewport.getBoundingClientRect(),
                h = k.width / k.height;
            return "viewport" === a ? (c.outputWidth = k.width, c.outputHeight = k.height) : "object" == typeof a && (a.width && a.height ? (c.outputWidth = a.width, c.outputHeight = a.height) : a.width ? (c.outputWidth = a.width, c.outputHeight = a.width / h) : a.height && (c.outputWidth = a.height * h, c.outputHeight = a.height)), -1 < ia.indexOf(f) && (c.format = "image/" + f, c.quality = l), c.circle = d, c.url = b.data.url, c.backgroundColor = n, new Promise(function(a) {
                switch (e.toLowerCase()) {
                    case "rawcanvas":
                        a(O.call(b, c));
                        break;
                    case "canvas":
                    case "base64":
                        var d = O.call(b, c).toDataURL(c.format, c.quality);
                        a(d);
                        break;
                    case "blob":
                        ea.call(b, c).then(a);
                        break;
                    default:
                        d = c.points;
                        var f = document.createElement("div"),
                            g = document.createElement("img"),
                            h = d[2] - d[0],
                            k = d[3] - d[1];
                        d = (t(f, "croppie-result"), f.appendChild(g), m(g, {
                            left: -1 * d[0] + "px",
                            top: -1 * d[1] + "px"
                        }), g.src = c.url, m(f, {
                            width: h + "px",
                            height: k + "px"
                        }), f);
                        a(d)
                }
            })
        }
        function v(a, b) {
            if (this.element = a, this.options = A(A({}, v.defaults), b), "img" === this.element.tagName.toLowerCase()) a = this.element, t(a, "cr-original-image"), b = document.createElement("div"), this.element.parentNode.appendChild(b), b.appendChild(a), this.element = b, this.options.url = this.options.url || a.src;
            var c;
            a = this.options.viewport.type ? "cr-vp-" + this.options.viewport.type : null;
            b = this.options;
            (c = this.options.enableOrientation) || (c = this.options.enableExif && window.EXIF);
            b.useCanvas = c;
            this.data = {};
            this.elements = {};
            b = this.elements.boundary = document.createElement("div");
            c = this.elements.viewport = document.createElement("div");
            this.elements.img = document.createElement("img");
            var d = this.elements.overlay = document.createElement("div");
            this.options.useCanvas ? (this.elements.canvas = document.createElement("canvas"), this.elements.preview = this.elements.canvas) : this.elements.preview = this.elements.img;
            t(b, "cr-boundary");
            var e = this.options.boundary.width;
            var f = this.options.boundary.height;
            m(b, {
                width: e + (isNaN(e) ? "" : "px"),
                height: f + (isNaN(f) ? "" : "px")
            });
            t(c, "cr-viewport");
            a && t(c, a);
            m(c, {
                width: this.options.viewport.width + "px",
                height: this.options.viewport.height + "px"
            });
            c.setAttribute("tabindex", 0);
            t(this.elements.preview, "cr-image");
            t(d, "cr-overlay");
            this.element.appendChild(b);
            b.appendChild(this.elements.preview);
            b.appendChild(c);
            b.appendChild(d);
            t(this.element, "croppie-container");
            this.options.customClass && t(this.element, this.options.customClass);
            ca.call(this);
            this.options.enableZoom && Z.call(this);
            this.options.enableResize && Y.call(this);
            this.options.url && (a = {
                url: this.options.url,
                points: this.options.points
            }, delete this.options.url, delete this.options.points, U.call(this, a))
        }
        "function" != typeof Promise && !
            function(a) {
                function b(a, b) {
                    return function() {
                        a.apply(b, arguments)
                    }
                }
                function c(a) {
                    if ("object" != typeof this) throw new TypeError("Promises must be constructed via new");
                    if ("function" != typeof a) throw new TypeError("not a function");
                    this._value = this._state = null;
                    this._deferreds = [];
                    k(a, b(e, this), b(f, this))
                }
                function d(a) {
                    var b = this;
                    return null === this._state ? void this._deferreds.push(a) : void g(function() {
                        var c = b._state ? a.onFulfilled : a.onRejected;
                        if (null === c) return void(b._state ? a.resolve : a.reject)(b._value);
                        try {
                            var d = c(b._value)
                        } catch (M) {
                            return void a.reject(M)
                        }
                        a.resolve(d)
                    })
                }
                function e(a) {
                    try {
                        if (a === this) throw new TypeError("A promise cannot be resolved with itself.");
                        if (a && ("object" == typeof a || "function" == typeof a)) {
                            var c = a.then;
                            if ("function" == typeof c) return void k(b(c, a), b(e, this), b(f, this))
                        }
                        this._state = !0;
                        this._value = a;
                        l.call(this)
                    } catch (E) {
                        f.call(this, E)
                    }
                }
                function f(a) {
                    this._state = !1;
                    this._value = a;
                    l.call(this)
                }
                function l() {
                    for (var a = 0, b = this._deferreds.length; b > a; a++) d.call(this, this._deferreds[a]);
                    this._deferreds = null
                }
                function n(a, b, c, d) {
                    this.onFulfilled = "function" == typeof a ? a : null;
                    this.onRejected = "function" == typeof b ? b : null;
                    this.resolve = c;
                    this.reject = d
                }
                function k(a, b, c) {
                    var d = !1;
                    try {
                        a(function(a) {
                            d || (d = !0, b(a))
                        }, function(a) {
                            d || (d = !0, c(a))
                        })
                    } catch (M) {
                        d || (d = !0, c(M))
                    }
                }
                var h = setTimeout,
                    g = "function" == typeof setImmediate && setImmediate ||
                        function(a) {
                            h(a, 1)
                        }, m = Array.isArray ||
                    function(a) {
                        return "[object Array]" === Object.prototype.toString.call(a)
                    };
                c.prototype["catch"] = function(a) {
                    return this.then(null, a)
                };
                c.prototype.then = function(a, b) {
                    var e = this;
                    return new c(function(c, f) {
                        d.call(e, new n(a, b, c, f))
                    })
                };
                c.all = function() {
                    var a = Array.prototype.slice.call(1 === arguments.length && m(arguments[0]) ? arguments[0] : arguments);
                    return new c(function(b, c) {
                        function d(f, g) {
                            try {
                                if (g && ("object" == typeof g || "function" == typeof g)) {
                                    var h = g.then;
                                    if ("function" == typeof h) return void h.call(g, function(a) {
                                        d(f, a)
                                    }, c)
                                }
                                a[f] = g;
                                0 === --e && b(a)
                            } catch (ja) {
                                c(ja)
                            }
                        }
                        if (0 === a.length) return b([]);
                        for (var e = a.length, f = 0; f < a.length; f++) d(f, a[f])
                    })
                };
                c.resolve = function(a) {
                    return a && "object" == typeof a && a.constructor === c ? a : new c(function(b) {
                        b(a)
                    })
                };
                c.reject = function(a) {
                    return new c(function(b, c) {
                        c(a)
                    })
                };
                c.race = function(a) {
                    return new c(function(b, c) {
                        for (var d = 0, e = a.length; e > d; d++) a[d].then(b, c)
                    })
                };
                c._setImmediateFn = function(a) {
                    g = a
                };
                "undefined" != typeof module && module.exports ? module.exports = c : a.Promise || (a.Promise = c)
            }(this);
        "function" != typeof window.CustomEvent && !
            function() {
                function a(a, c) {
                    c = c || {
                        bubbles: !1,
                        cancelable: !1,
                        detail: void 0
                    };
                    var b = document.createEvent("CustomEvent");
                    return b.initCustomEvent(a, c.bubbles, c.cancelable, c.detail), b
                }
                a.prototype = window.Event.prototype;
                window.CustomEvent = a
            }();
        HTMLCanvasElement.prototype.toBlob || Object.defineProperty(HTMLCanvasElement.prototype, "toBlob", {
            value: function(a, b, c) {
                c = atob(this.toDataURL(b, c).split(",")[1]);
                for (var d = c.length, e = new Uint8Array(d), f = 0; d > f; f++) e[f] = c.charCodeAt(f);
                a(new Blob([e], {
                    type: b || "image/png"
                }))
            }
        });
        var Q = ["Webkit", "Moz", "ms"],
            P = document.createElement("div").style;
        var u = z("transform");
        var D = z("transformOrigin");
        var B = z("userSelect");
        var ka = {
                translate3d: {
                    suffix: ", 0px"
                },
                translate: {
                    suffix: ""
                }
            },
            r = function(a, b, c) {
                this.x = parseFloat(a);
                this.y = parseFloat(b);
                this.scale = parseFloat(c)
            };
        r.parse = function(a) {
            return a.style ? r.parse(a.style[u]) : -1 < a.indexOf("matrix") || -1 < a.indexOf("none") ? r.fromMatrix(a) : r.fromString(a)
        };
        r.fromMatrix = function(a) {
            var b = a.substring(7).split(",");
            return b.length && "none" !== a || (b = [1, 0, 0, 1, 0, 0]), new r(parseInt(b[4], 10), parseInt(b[5], 10), parseFloat(b[0]))
        };
        r.fromString = function(a) {
            var b = a.split(") ");
            a = b[0].substring(v.globals.translate.length + 1).split(",");
            b = 1 < b.length ? b[1].substring(6) : 1;
            return new r(1 < a.length ? a[0] : 0, 1 < a.length ? a[1] : 0, b)
        };
        r.prototype.toString = function() {
            return v.globals.translate + "(" + this.x + "px, " + this.y + "px" + (ka[v.globals.translate].suffix || "") + ") scale(" + this.scale + ")"
        };
        var H = function(a) {
            if (!a || !a.style[D]) return this.x = 0, void(this.y = 0);
            a = a.style[D].split(" ");
            this.x = parseFloat(a[0]);
            this.y = parseFloat(a[1])
        };
        H.prototype.toString = function() {
            return this.x + "px " + this.y + "px"
        };
        var ba = function(a, b, c) {
                var d;
                return function() {
                    var e = this,
                        f = arguments,
                        l = c && !d;
                    clearTimeout(d);
                    d = setTimeout(function() {
                        d = null;
                        c || a.apply(e, f)
                    }, b);
                    l && a.apply(e, f)
                }
            }(F, 500),
            ha = {
                type: "canvas",
                format: "png",
                quality: 1
            },
            ia = ["jpeg", "webp", "png"];
        if (window.jQuery) {
            var y = window.jQuery;
            y.fn.croppie = function(a) {
                if ("string" === typeof a) {
                    var b = Array.prototype.slice.call(arguments, 1),
                        c = y(this).data("croppie");
                    return "get" === a ? c.get() : "result" === a ? c.result.apply(c, b) : "bind" === a ? c.bind.apply(c, b) : this.each(function() {
                        var c = y(this).data("croppie");
                        if (c) {
                            var e = c[a];
                            if (!y.isFunction(e)) throw "Croppie " + a + " method not found";
                            e.apply(c, b);
                            "destroy" === a && y(this).removeData("croppie")
                        }
                    })
                }
                return this.each(function() {
                    var b = new v(this, a);
                    b.$ = y;
                    y(this).data("croppie", b)
                })
            }
        }
        v.defaults = {
            viewport: {
                width: 100,
                height: 100,
                type: "square"
            },
            boundary: {},
            orientationControls: {
                enabled: !0,
                leftClass: "",
                rightClass: ""
            },
            resizeControls: {
                width: !0,
                height: !0
            },
            customClass: "",
            showZoomer: !0,
            enableZoom: !0,
            enableResize: !1,
            mouseWheelZoom: !0,
            enableExif: !1,
            enforceBoundary: !0,
            enableOrientation: !1,
            enableKeyMovement: !0,
            update: function() {}
        };
        v.globals = {
            translate: "translate3d"
        };
        A(v.prototype, {
            bind: function(a, b) {
                return U.call(this, a, b)
            },
            get: function() {
                var a = V.call(this),
                    b = a.points;
                return this.options.relative && (b[0] /= this.elements.img.naturalWidth / 100, b[1] /= this.elements.img.naturalHeight / 100, b[2] /= this.elements.img.naturalWidth / 100, b[3] /= this.elements.img.naturalHeight / 100), a
            },
            result: function(a) {
                return fa.call(this, a)
            },
            refresh: function() {
                N.call(this)
            },
            setZoom: function(a) {
                G.call(this, a);
                K(this.elements.zoomer)
            },
            rotate: function(a) {
                if (!this.options.useCanvas) throw "Croppie: Cannot rotate without enableOrientation";
                var b = this.elements.canvas,
                    c = document.createElement("canvas"),
                    d = 1;
                c.width = b.width;
                c.height = b.height;
                c.getContext("2d").drawImage(b, 0, 0);
                90 !== a && -270 !== a || (d = 6); - 90 !== a && 270 !== a || (d = 8);
                180 !== a && -180 !== a || (d = 3);
                L(b, c, d);
                T.call(this)
            },
            destroy: function() {
                this.element.removeChild(this.elements.boundary);
                var a = this.element;
                a.classList ? a.classList.remove("croppie-container") : a.className = a.className.replace("croppie-container", "");
                this.options.enableZoom && this.element.removeChild(this.elements.zoomerWrap);
                delete this.elements
            }
        });
        J.Croppie = window.Croppie = v;
        "object" == typeof module && module.exports && (module.exports = v)
    });